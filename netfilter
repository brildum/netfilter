#!/usr/bin/env python3

import argparse
import ipaddress
import re
import sys

desc = """Filter IP-containing lines by netblocks. \
By default, filter includes lines that match the specified netblocks."""

def main():
    parser = argparse.ArgumentParser(prog='netfilter', description=desc)
    parser.add_argument('--netblocks', '-n', required=True, type=netblocks,
                        help='comma-delimited list of CIDR netblocks')
    parser.add_argument('--regex', '-r', required=True, type=regex,
                        help='regular expression to identify IPs')
    parser.add_argument('--group', '-g', required=True, type=int,
                        help='regular expression group to identify IP')
    parser.add_argument('--input', '-i', type=argparse.FileType('r'),
                        help='input file to read (defaults to stdin)')
    parser.add_argument('--exclude', '-x', action='store_true',
                        help='exclude lines which match netblocks filter')
    args = parser.parse_args()

    if args.exclude:
        def process(matched, line):
            if not matched:
                sys.stdout.write(line)
    else:
        def process(matched, line):
            if matched:
                sys.stdout.write(line)

    f = sys.stdin
    if args.input:
        f = args.input
    for line in f:
        matched = False
        ip_match = args.regex.match(line)
        if ip_match:
            ip = ipaddress.ip_address(ip_match.group(args.group))
            for net in args.netblocks:
                if ip in net:
                    matched = True
                    break
        process(matched, line)

def netblocks(arg):
    return [ipaddress.ip_network(c) for c in arg.split(',')]

regex = re.compile

if __name__ == '__main__':
    main()
